[tox]
requires =
  tox>=4
  tox-uv
envlist =
  py3{10,11,12,13}-latest
  py310-min
  py3{11,12,13}-pre
skip_missing_interpreters = true

# Configuration that allows us to split tests across GitHub runners effectively
[gh-actions]
python =
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313

[gh-actions:env]
DEPENDS =
  min: min
  latest: latest
  pre: pre

[testenv]
description = Pytest with coverage
labels = test
pip_pre =
  pre: true
pass_env =
  TEMPLATEFLOW_HOME
  NO_ET
  # Freesurfer variables searched for
  FREESURFER_HOME
  SUBJECTS_DIR
  FS_LICENSE
  # CI variables
  TEST_DATA_HOME
  TEST_OUTPUT_DIR
  TEST_WORK_DIR
  FMRIPREP_REGRESSION_SOURCE
  CACHED_WORK_DIRECTORY
  # CircleCI-specific
  CIRCLE_NPROCS
  SAVE_CIRCLE_ARTIFACTS
  # getpass.getuser() sources for Windows:
  LOGNAME
  USER
  LNAME
  USERNAME
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
  PYTHON_GIL
deps =
  py313: traits @ git+https://github.com/enthought/traits.git@10954eb
extras = tests
setenv =
  pre: PIP_EXTRA_INDEX_URL=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
  pre: UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
  pre: UV_INDEX_STRATEGY=unsafe-best-match
  FSLOUTPUTTYPE=NIFTI_GZ
uv_resolution =
  min: lowest-direct

commands =
  pytest --durations=20 --durations-min=1.0 --cov-report term-missing {posargs:-n auto}

[testenv:style]
description = Check our style guide
labels = check
deps =
  ruff
skip_install = true
commands =
  ruff check --diff
  ruff format --diff

[testenv:style-fix]
description = Auto-apply style guide to the extent possible
labels = pre-release
deps =
  ruff
skip_install = true
commands =
  ruff check --fix
  ruff format
  ruff check --select ISC001

[testenv:spellcheck]
description = Check spelling
labels = check
deps =
  codespell[toml]
skip_install = true
commands =
  codespell . {posargs}

[testenv:build{,-strict}]
labels =
  check
  pre-release
deps =
  build
  twine
skip_install = true
set_env =
  # Ignore specific known warnings:
  # https://github.com/pypa/pip/issues/11684
  # https://github.com/pypa/pip/issues/12243
  strict: PYTHONWARNINGS=error,once:pkg_resources is deprecated as an API.:DeprecationWarning:pip._internal.metadata.importlib._envs,once:Unimplemented abstract methods {'locate_file'}:DeprecationWarning:pip._internal.metadata.importlib._dists
commands =
  python -m build
  python -m twine check dist/*

[testenv:publish]
depends = build
labels = release
deps =
  twine
skip_install = true
commands =
  python -m twine upload dist/*

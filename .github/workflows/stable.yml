name: Stable tests

on:
  push:
    branches:
      - master
      - maint/*
  pull_request:
    branches:
      - master
      - maint/*

defaults:
  run:
    shell: bash

jobs:
  stable:
    # Check each OS, all supported Python, minimum versions and latest releases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: [3.7, 3.8, 3.9]
        install: ['pip']
        check: ['test']
        pip-flags: ['']
        include:
          # Clean install imports only with package-declared dependencies
          - os: ubuntu-latest
            python-version: 3.9
            install: pip
            check: skiptests
            pip-flags: ''
          # Check all installation methods
          - os: ubuntu-latest
            python-version: 3.9
            install: wheel
            check: test
            pip-flags: ''
          - os: ubuntu-latest
            python-version: 3.9
            install: sdist
            check: test
            pip-flags: ''
    env:
      INSTALL_TYPE: ${{ matrix.install }}
      CHECK_TYPE: ${{ matrix.check }}
      EXTRA_PIP_FLAGS: ${{ matrix.pip-flags }}
      OS_TYPE: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Create virtual environment
        run: tools/ci/create_venv.sh
      - name: Build archive
        run: |
          source tools/ci/build_archive.sh
          echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV
      - name: Install sMRIPrep
        run: tools/ci/install.sh
      - name: Install extras
        run: tools/ci/install_extras.sh
      - name: Run tests
        run: tools/ci/check.sh
        if: ${{ matrix.check != 'skiptests' }}
      - uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
        if: ${{ always() }}
